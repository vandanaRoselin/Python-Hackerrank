
# Sets in Python are mutable objects. You can modify the contents of a set after
# it has been created by adding or removing elements. However, the elements
# themselves must be immutable (or hashable) objects. This means you cannot have
# a set of sets, but you can have a set of immutable objects like integers,
# strings, or tuples.


# Creating a set
my_set = {1,2,3,4,5,6,7,8}
my_set1 = {1,2,3,4,"Jona",(1,2,3,4)}

# Adding elements
my_set = {1,2,3,4,5,6,7,8}
my_set.add(9) # here we are adding values in the set
print(my_set)
my_set.add('abc')
my_set1.add("Rose")
print(my_set)

print("************************************")
# Removing elements

my_set = {1,2,3,4,5,4,5}
my_set.remove(2) # removing 2 element from the set and also all duplicate number occurance of element from the set  Output = {1, 3, 4, 5}
my_set.remove(5) # here it remove all duplicate number occurance of element from the set.suppose 5 it remove all 5 elements.
print(my_set) # Output = {1, 2, 3, 4}

print("************************************")

# Union and Intersection:
# Write a function that takes two sets as input and returns their union and intersection.
set1 = {1,2,3,4,5}
set2 = {6,7,2,4,10}
union_set = set1.union(set2) # here we are union the two sets in one by using set1.union(set2) and it wont show duplicate value it takes only one time.
print(union_set) # output = {1, 2, 3, 4, 5, 6, 7, 10} it combine both the sets.it wont take repeated value, it takes only once.

print("************************************")

set1 = {1,2,3,4,5}
set2 = {6,7,2,4,10}
intersection_set = set1.intersection(set2) #it intersect the only common value from both the sets
print(intersection_set) # output ={2,4}

print("*********************************************")

my_set = {1,2,3,4,6}
my_set1 ={2,3,4,5,7}
difference_set = my_set.difference(my_set1) # here it differnce both the sets and considering 1st set that is my_set values.
difference_set1 = my_set1.difference(my_set) # here it differnce both the sets and considering 2nd set that is my_set1 values.
print(difference_set) # output = {1, 6}
print(difference_set1) # output = {5, 7}

print("************************************")
# Symmetric difference
my_set = {1,2,3,4,6}
my_set1 ={2,3,4,5,7}
symmetric_difference_set = my_set.symmetric_difference(my_set1) # here it differences both set of values and combines both set with different values.It remove or not considering same value.
print(symmetric_difference_set)  # Output:  {1, 5, 6, 7}

print("************************************")

# Updating Sets:
# Write a function that takes two sets as input and updates the first set with the elements of the second set.
# Updating with union
set1 = {2,3,4,5}
set2 = {3,6,7,8}
set1.update(set2) # here we are updating one set to another set
print(set1) # output = {2, 3, 4, 5, 6, 7, 8}

# Intersection update
my_set = {1,2,3,4}
my_set.intersection_update({2,4,5,6})
print(my_set)  # Output: {2,4}

my_set1 = {1,2,3,4}
my_set1.difference_update({2,4,5,6})
print(my_set1)  # Output: {2,4}

print("************************************")
#Write a function that takes a list as input and returns a new list
# #containing the unique elements of the input list using sets.

def unique(x):
    return set(x)
list_a=[1,4,5,6,6,6,6,9,]
y=set(list_a)
z=unique(list_a)
print(z)
print(y)

print("************************************")
#Create a function that takes a list of sets as input and returns a single
# set containing all unique elements from the input sets.

print(set)

print("************************************")
#Write a function that removes common elements between two sets and returns a new set with only the unique elements from each set.

set1 ={1,2,6,7}
set2 = {3,6,8,7}
x=set1.union(set2)
print(x)
y=set1.intersection(set2)
print(y)
print(x.difference(y))

set1 ={1,2,3,4,5}
set2 = {1,2,6,7,8}
symmetric_difference_set =set1.symmetric_difference(set2)
print(symmetric_difference_set) #Output = {3, 4, 5, 6, 7, 8}

print("************************************")

# Symmetric difference update
my_set.symmetric_difference_update({4, 5, 6})
#print(my_set)  # Output: {3, 6}

x = {"apple", "banana", "cherry", False}
y = {"google", 0, "apple", 2}
#True ==1 ,False ==0
z = x.symmetric_difference(y)
print(z) # Output = {2, 'banana', 'cherry', 'google'}

Output:--------------------------------

{1, 2, 3, 4, 5, 6, 7, 8, 9}
{1, 2, 3, 4, 5, 6, 7, 8, 9, 'abc'}
************************************
{1, 3, 4}
************************************
{1, 2, 3, 4, 5, 6, 7, 10}
************************************
{2, 4}
*********************************************
{1, 6}
{5, 7}
************************************
{1, 5, 6, 7}
************************************
{2, 3, 4, 5, 6, 7, 8}
{2, 4}
{1, 3}
************************************
{1, 4, 5, 6, 9}
{1, 4, 5, 6, 9}
************************************
<class 'set'>
************************************
{1, 2, 3, 6, 7, 8}
{6, 7}
{8, 1, 2, 3}
{3, 4, 5, 6, 7, 8}
************************************
{2, 'google', 'banana', 'cherry'}

Process finished with exit code 0
