# Append and Extend: # Create an empty list and append three elements to it.
empty_list = [ ]
if not empty_list:
    print("List is empty")
empty_list1 = [1,2,3]
empty_list.append(empty_list1)
# empty_list.append()
print(empty_list)

print("**********************************")
# Create two lists, and then extend the first list by adding elements from the second list.
my_list1 = [1,2,3,4,5]
my_list2 = [6,7,8,9,10]
my_list1.extend(my_list2)
print(my_list1)

print("**********************************")

# Insert and Remove: # Create a list of fruits, then insert "banana" at the second position.
my_fruits = ["Orange","Grapes","Mango","Chiku"]
my_fruits.insert(1,"Banana")
print(my_fruits)

print("**********************************")

# Create a list of numbers, then remove the number 5 from the list.

list_numbers = [1,2,3,4,5,6,7,8,9,5]
list_numbers.remove(5)
print(list_numbers)

print("**********************************")

# Index and Count: # Create a list of colors and find the index of "red".
my_list = ["blue","green","red","purple"]
index = my_list.index("red")
print(index)
my_list1 = my_list.pop(0)
print(my_list1)
print("**********************************")
# Create a list of numbers and count how many times the number 7 appears.
my_list = [1,2,3,4,7,7,6,7,8,7]
count = my_list.count(7)
print(count)

print("**********************************")

# Reverse and Sort: # Create a list of letters, then reverse the order of the elements.

my_list = ['a','b','c','d','e','f']
my_list.reverse()
print(my_list)

print("**********************************")
# Create a list of numbers, then sort it in ascending order and descending order.
my_list = [1,2,3,4,-2,-1,5]   #in ascending order
my_list.sort()
print(my_list)

my_list = [1,2,3,4,-2,-1,5]   #in descending order
my_list.sort(reverse=True)
print(my_list)

print("**********************************")
# Copy and Clear: # Create a list of animals, then create a copy of the list.
my_list = ["Tiger","Lion","Cow","Dog","Cat"]
my_list1 = my_list.copy()
print(my_list1)
my_list1.insert(2,"Hyena")
print(my_list1)

print("**********************************")
# Create a list of elements, then clear all elements from the list.
my_list = [1,2,3,4,5,6,7,8,9,10]
my_list.clear()
print(my_list)

print("**********************************")
# List Comprehensions: # Create a list of squares of numbers from 1 to 5 using list comprehension.
squares = [x**2 for x in range(6)]
print(squares)

print("**********************************")
# Create a list of even numbers from 1 to 10 using list comprehension.
even = [x for x in range(10) if x % 2 == 0]  #for even numbers
print(even)

odd = [x for x in range(10) if x % 2 == 1]  #for odd numbers
print(odd)

print("**********************************")

# Other Methods: # Create a list of names and use pop() to remove and return the last element.
my_list = ["Rohit","Sneha","Peter","John","Seema"]
my_list1 = my_list.pop(4)
print(my_list1)

my_list=[1, 2, 7, 3, 4, 5, 6,3]
u=my_list.pop(5)
print(u)

print("**********************************")
# Create a list of cities and use index() to find the index of "Paris".

my_cities = ["Bangalore","Delhi","Kolkata","Paris","Hyderabad"]
cities = my_cities.index("Paris") # to find the index number
cities1 = my_cities.pop(3) # to find the index value
print(cities)
print(cities1)

print("**********************************")
# Checking Length of list.

my_list = ['a','b',"vandana","Roselin"]
print(len(my_list)) # Here its checking only elements without including space.Output: 4
print(type(my_list)) # type of class
check1="karan !!" # here its checking each variables with including space .Output: 8
print(len(check1)) 

Output;

C:\Users\vandana.roselin\PycharmProjects\pythonProject\.venv\Scripts\python.exe C:\Users\vandana.roselin\PycharmProjects\pythonProject\List_Assignment_Pgm.py 
List is empty
[[1, 2, 3]]
**********************************
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
**********************************
['Orange', 'Banana', 'Grapes', 'Mango', 'Chiku']
**********************************
[1, 2, 3, 4, 6, 7, 8, 9, 5]
**********************************
2
blue
**********************************
4
**********************************
['f', 'e', 'd', 'c', 'b', 'a']
**********************************
[-2, -1, 1, 2, 3, 4, 5]
[5, 4, 3, 2, 1, -1, -2]
**********************************
['Tiger', 'Lion', 'Cow', 'Dog', 'Cat']
['Tiger', 'Lion', 'Hyena', 'Cow', 'Dog', 'Cat']
**********************************
[]
**********************************
[0, 1, 4, 9, 16, 25]
**********************************
[0, 2, 4, 6, 8]
[1, 3, 5, 7, 9]
**********************************
Seema
5
**********************************
3
Paris
**********************************
4
<class 'list'>
8

Process finished with exit code 0
